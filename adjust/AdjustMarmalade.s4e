globals

include:

#include <vector>
typedef std::vector<std::pair<const char*, const char*> > param_type;

#include <stdlib.h>
struct response_data {
	char* activityKind;
	bool success;
	bool willRetry;
	char* error;
	char* trackerToken;
	char* trackerName;
	char* network;
	char* campaign;
	char* adgroup;
	char* creative;
};

typedef void (*response_data_delegate)(response_data*);

/**
 * @defgroup adjustSDK adjust SDK Extension API Reference
 *
 * This extension allows an application to integrate the adjust SDK.
 * Read more about adjust.io at http://adjust.io
 *
 * @{
 */

#include <s3eTypes.h>

functions:

s3eResult AppDidLaunch(const char* appToken, const char* environment, const char* sdkPrefix, const char* logLevel, bool eventBuffering) S3E_RESULT_ERROR

s3eResult TrackEvent(const char* eventToken, const param_type* params) S3E_RESULT_ERROR

s3eResult TrackEventIphone(const char* eventToken, const char** params_array, int param_size) S3E_RESULT_ERROR

s3eResult TrackRevenue(double cents, const char* eventToken, const param_type* params) S3E_RESULT_ERROR

s3eResult TrackRevenueIphone(double cents, const char* eventToken, const char** params_array, int param_size) S3E_RESULT_ERROR

s3eResult SetEnabled(bool enabled) S3E_RESULT_ERROR

s3eResult IsEnabled(bool& isEnabled_out) S3E_RESULT_ERROR

s3eResult SetResponseDelegate(response_data_delegate delegateFn) S3E_RESULT_ERROR
append:
/** @} */
